1. MVC (웹 전용)
- back이 화면까지 가지고 있다 
- (flask가 templates 폴더에 html을 가지고 있었다) 
- back은 html 또는 주소를 보내주고 프로튼는 그대로 출력/이동 
- 개발이 간편하다 

2. REST 방식 
- back과 front는 별개, ajax로 연결 
- 개발이 복잡하다 
- 대신에 하나의 벽으로 다양한 프로튼와 연결하는 등 유연성이 뛰어나다


3.  HTTP : 웹의 프로토콜(통신규약)
-   http method : get 과 post 
      get - 서버의 정보가 변경 x -> 여러번 실행 가능 
      post - 서버의 정보가 변경 -> 한번만 실행해야(결제....) -> 게시판 
-   http 상태 코드
    200 : 결과가 나왔다 (오류가 없다)
    400 : 서버에서 수신을 거부 
    403 : 권한 오류      
    404 : not found  서버에 입력이 되지 않았기에 아무것도 뜨지 않는다 
    405 : method 오류  post으로 바꿔야 한다
    500 : 서버에서 처리도중 오류 발생 

4. callback 함수 
- 함수를 위탁해서 실행 
- 이벤트처리 함수 (이벤트 handler)가 대표적

5. $.ajax()에서 서버로 넘기는 데이터 는 urlencoded다 
- username은 spirng , pwd는 1234라면 
$.ajax({
    url: '서버주소'
    data : 'username = spirng&pwd=1234'
})
- $.ajax()는 data에 자바스크립트를 주면 자동으로 urlencoded 변환 